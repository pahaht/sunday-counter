// Statistics page functionality
document.addEventListener('DOMContentLoaded', function() {
    loadStatistics();
    setupEventListeners();
});

function loadStatistics() {
    // Load current data from localStorage
    const koreanCount = parseInt(localStorage.getItem('koreanCount') || '0');
    const foreignerCount = parseInt(localStorage.getItem('foreignerCount') || '0');
    const todayTotal = parseInt(localStorage.getItem('todayTotal') || '0');
    const thisSunday = parseInt(localStorage.getItem('thisSunday') || '0');
    
    // Update display
    document.getElementById('koreanToday').textContent = koreanCount;
    document.getElementById('foreignerToday').textContent = foreignerCount;
    document.getElementById('totalToday').textContent = todayTotal;
    document.getElementById('thisSunday').textContent = thisSunday;
}

function setupEventListeners() {
    // Export stats button
    document.getElementById('exportStatsBtn').addEventListener('click', exportStats);
    
    // Share stats button
    document.getElementById('shareStatsBtn').addEventListener('click', shareStats);
    
    // View history button
    document.getElementById('viewHistoryBtn').addEventListener('click', toggleHistory);
    
    // Reset Sunday button
    document.getElementById('resetSundayBtn').addEventListener('click', resetSunday);
}

function exportStats() {
    const koreanCount = parseInt(localStorage.getItem('koreanCount') || '0');
    const foreignerCount = parseInt(localStorage.getItem('foreignerCount') || '0');
    const todayTotal = parseInt(localStorage.getItem('todayTotal') || '0');
    const thisSunday = parseInt(localStorage.getItem('thisSunday') || '0');
    const currentDate = new Date().toLocaleDateString();
    
    const statsText = `Sunday Service Statistics - ${currentDate}

Korean Attendees: ${koreanCount}
Foreigner Attendees: ${foreignerCount}
Total Today: ${todayTotal}
This Sunday Total: ${thisSunday}

Generated by Antioch International Ministry
SOOYOUNGRO CHURCH`;

    // Create and download file
    const blob = new Blob([statsText], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `sunday-stats-${currentDate.replace(/\//g, '-')}.txt`;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
    
    // Haptic feedback
    if (navigator.vibrate) {
        navigator.vibrate(100);
    }
}

function shareStats() {
    const koreanCount = parseInt(localStorage.getItem('koreanCount') || '0');
    const foreignerCount = parseInt(localStorage.getItem('foreignerCount') || '0');
    const todayTotal = parseInt(localStorage.getItem('todayTotal') || '0');
    const thisSunday = parseInt(localStorage.getItem('thisSunday') || '0');
    const currentDate = new Date().toLocaleDateString();
    
    const shareText = `Sunday Service Statistics - ${currentDate}

Korean: ${koreanCount}
Foreigner: ${foreignerCount}
Total: ${todayTotal}
Sunday Total: ${thisSunday}

Antioch International Ministry`;

    // Try native sharing first
    if (navigator.share) {
        navigator.share({
            title: 'Sunday Service Statistics',
            text: shareText,
            url: window.location.href
        }).catch(err => {
            console.log('Share failed:', err);
            fallbackShare(shareText);
        });
    } else {
        fallbackShare(shareText);
    }
    
    // Haptic feedback
    if (navigator.vibrate) {
        navigator.vibrate(100);
    }
}

function fallbackShare(shareText) {
    // Create share modal
    const modal = document.createElement('div');
    modal.style.cssText = `
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0,0,0,0.8);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 1000;
    `;
    
    const modalContent = document.createElement('div');
    modalContent.style.cssText = `
        background: white;
        padding: 30px;
        border-radius: 12px;
        max-width: 90%;
        max-height: 80%;
        overflow-y: auto;
    `;
    
    modalContent.innerHTML = `
        <h3>ðŸ“§ Share Statistics</h3>
        <p>Copy the statistics below:</p>
        <textarea style="width: 100%; height: 150px; margin: 15px 0; padding: 10px; border: 1px solid #ddd; border-radius: 5px;">${shareText}</textarea>
        <div style="display: flex; gap: 10px; justify-content: center;">
            <button onclick="navigator.clipboard.writeText('${shareText.replace(/'/g, "\\'")}').then(() => alert('Copied to clipboard!')).catch(err => console.log('Copy failed:', err))" style="background: #28a745; color: white; border: none; padding: 10px 20px; border-radius: 5px; cursor: pointer;">Copy</button>
            <button onclick="window.open('mailto:?subject=Sunday Service Statistics&body=${encodeURIComponent(shareText)}')" style="background: #007bff; color: white; border: none; padding: 10px 20px; border-radius: 5px; cursor: pointer;">Email</button>
            <button onclick="window.open('https://wa.me/?text=${encodeURIComponent(shareText)}')" style="background: #25d366; color: white; border: none; padding: 10px 20px; border-radius: 5px; cursor: pointer;">WhatsApp</button>
            <button onclick="this.parentElement.parentElement.parentElement.remove()" style="background: #6c757d; color: white; border: none; padding: 10px 20px; border-radius: 5px; cursor: pointer;">Close</button>
        </div>
    `;
    
    modal.appendChild(modalContent);
    document.body.appendChild(modal);
}

function toggleHistory() {
    const historySection = document.getElementById('historySection');
    const historyList = document.getElementById('historyList');
    
    if (historySection.style.display === 'none') {
        // Show history
        historySection.style.display = 'block';
        loadHistory();
    } else {
        // Hide history
        historySection.style.display = 'none';
    }
    
    // Haptic feedback
    if (navigator.vibrate) {
        navigator.vibrate(100);
    }
}

function loadHistory() {
    const historyList = document.getElementById('historyList');
    const history = JSON.parse(localStorage.getItem('attendanceHistory') || '[]');
    
    if (history.length === 0) {
        historyList.innerHTML = '<p style="text-align: center; color: #666; padding: 20px;">No attendance history available.</p>';
        return;
    }
    
    let historyHTML = '';
    history.slice(-10).reverse().forEach(entry => {
        historyHTML += `
            <div class="history-item">
                <div class="history-date">${entry.date}</div>
                <div class="history-stats">
                    <span>Korean: ${entry.korean}</span>
                    <span>Foreigner: ${entry.foreigner}</span>
                    <span>Total: ${entry.total}</span>
                </div>
            </div>
        `;
    });
    
    historyList.innerHTML = historyHTML;
}

function resetSunday() {
    if (confirm('Are you sure you want to reset all counters for this Sunday? This action cannot be undone.')) {
        // Clear all counters
        localStorage.setItem('koreanCount', '0');
        localStorage.setItem('foreignerCount', '0');
        localStorage.setItem('todayTotal', '0');
        localStorage.setItem('thisSunday', '0');
        
        // Reload statistics
        loadStatistics();
        
        // Haptic feedback
        if (navigator.vibrate) {
            navigator.vibrate(200);
        }
        
        alert('All counters have been reset for this Sunday.');
    }
}

function goBack() {
    // Navigate back to the main counter page
    window.location.href = 'index-v2.html';
} 